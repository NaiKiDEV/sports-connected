// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsConnected.Context;

namespace SportsConnected.Migrations
{
    [DbContext(typeof(SportsConnectedContext))]
    partial class SportsConnectedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsConnected.Entities.Court", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CourtType");

                    b.Property<string>("Description");

                    b.Property<string>("FullAdress");

                    b.Property<string>("ImageUrl");

                    b.Property<Guid>("OwnerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Courts");

                    b.HasData(
<<<<<<< HEAD
                        new { Id = new Guid("7adbb549-8dee-4803-badb-1b7710d80e11"), CourtType = "Basketball", Description = "Krepsinio aikstele su kokybiska danga ir james bluntu", FullAdress = "Kaunas 123g", ImageUrl = "www.gogle.lt", OwnerId = new Guid("55d6eec4-991b-4436-9a5a-dad0605c1848"), Title = "Naujausia krepsinio aikstele" }
=======
                        new { Id = new Guid("d3ee2b66-f167-4f05-8ae6-f9dca6165f76"), CourtType = "Basketball", Description = "Krepsinio aikstele su kokybiska danga ir james bluntu", FullAdress = "Kaunas 123g", ImageUrl = "www.gogle.lt", OwnerId = new Guid("c440fd9f-666e-4651-bd25-5a4f4cf41f37"), Title = "Naujausia krepsinio aikstele" }
>>>>>>> 492f1c43443db62a6a4e0426e4945adfd0d19bbe
                    );
                });

            modelBuilder.Entity("SportsConnected.Entities.Gym", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("FullAdress");

                    b.Property<string>("ImageUrl");

                    b.Property<Guid>("OwnerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Gyms");

                    b.HasData(
<<<<<<< HEAD
                        new { Id = new Guid("b4bbbdc7-3293-47d9-88e9-3ce6b4af7a25"), Description = "Sportuot arba prasileisi", FullAdress = "Rajono gatve, Ketvirtas kampas", ImageUrl = "www.ateiniCia.lt", OwnerId = new Guid("55d6eec4-991b-4436-9a5a-dad0605c1848"), Title = "Rajonska sportan klub" }
=======
                        new { Id = new Guid("c4998488-23ef-46c0-b05d-2d2ed355dac6"), Description = "Sportuot arba prasileisi", FullAdress = "Rajono gatve, Ketvirtas kampas", ImageUrl = "www.ateiniCia.lt", OwnerId = new Guid("c440fd9f-666e-4651-bd25-5a4f4cf41f37"), Title = "Rajonska sportan klub" }
>>>>>>> 492f1c43443db62a6a4e0426e4945adfd0d19bbe
                    );
                });

            modelBuilder.Entity("SportsConnected.Entities.Membership", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsPaid");

                    b.Property<Guid>("OfferId");

                    b.Property<DateTime>("StartDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("UserId");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("SportsConnected.Entities.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CourtId");

                    b.Property<string>("Description");

                    b.Property<Guid?>("GymId");

                    b.Property<string>("ImageUrl");

                    b.Property<double>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.HasIndex("GymId");

                    b.ToTable("Offers");

                    b.HasData(
<<<<<<< HEAD
                        new { Id = new Guid("4a49e447-8250-4cae-84c3-b3dabc53d639"), Description = "Toks geras gym, wow, ..as asd alkf alk", GymId = new Guid("b4bbbdc7-3293-47d9-88e9-3ce6b4af7a25"), ImageUrl = "asda.lt", Price = 12.0, Title = "Pasiulymas" },
                        new { Id = new Guid("96bc8d9c-14c7-4947-83ff-d2fb3d58b86d"), Description = "asdas dasasdasd asd asdas", GymId = new Guid("b4bbbdc7-3293-47d9-88e9-3ce6b4af7a25"), ImageUrl = "asaada.lt", Price = 11.0, Title = "Pasiulymas antras" },
                        new { Id = new Guid("4d985087-5304-4621-aeaa-42e60cefc97f"), CourtId = new Guid("7adbb549-8dee-4803-badb-1b7710d80e11"), Description = "courtas pirmassss as dasd asdas ", ImageUrl = "court.com", Price = 14.0, Title = "Pasiulymaasdas" },
                        new { Id = new Guid("d4cc0eee-31e7-4d37-8999-a355be91b8da"), CourtId = new Guid("7adbb549-8dee-4803-badb-1b7710d80e11"), Description = "Cia courtas du", ImageUrl = "qewwq.lt", Price = 113.0, Title = "Pasiulymas court antras" }
=======
                        new { Id = new Guid("dd14964b-a760-4c85-b752-369697c3aa62"), Description = "Toks geras gym, wow, ..as asd alkf alk", GymId = new Guid("c4998488-23ef-46c0-b05d-2d2ed355dac6"), ImageUrl = "asda.lt", Price = 12.0, Title = "Pasiulymas" },
                        new { Id = new Guid("5b76028b-2586-4670-b9cf-043909a6cc28"), Description = "asdas dasasdasd asd asdas", GymId = new Guid("c4998488-23ef-46c0-b05d-2d2ed355dac6"), ImageUrl = "asaada.lt", Price = 11.0, Title = "Pasiulymas antras" },
                        new { Id = new Guid("44761836-b94d-47f6-b058-0fbd408a4428"), CourtId = new Guid("d3ee2b66-f167-4f05-8ae6-f9dca6165f76"), Description = "courtas pirmassss as dasd asdas ", ImageUrl = "court.com", Price = 14.0, Title = "Pasiulymaasdas" },
                        new { Id = new Guid("3705e9d6-74c7-4684-8caf-e46211ffb590"), CourtId = new Guid("d3ee2b66-f167-4f05-8ae6-f9dca6165f76"), Description = "Cia courtas du", ImageUrl = "qewwq.lt", Price = 113.0, Title = "Pasiulymas court antras" }
>>>>>>> 492f1c43443db62a6a4e0426e4945adfd0d19bbe
                    );
                });

            modelBuilder.Entity("SportsConnected.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("IsSportGymAdmin");

                    b.Property<bool>("IsSportGymCourtAdmin");

                    b.Property<bool>("IsTrainer");

                    b.Property<bool>("IsUser");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
<<<<<<< HEAD
                        new { Id = new Guid("55d6eec4-991b-4436-9a5a-dad0605c1848"), Email = "jonax@gmail.com", IsSportGymAdmin = true, IsSportGymCourtAdmin = true, IsTrainer = true, IsUser = true, Name = "Jonas", Password = "Jonas123", PhoneNumber = "861234548", Surname = "Jonaitis" }
=======
                        new { Id = new Guid("c440fd9f-666e-4651-bd25-5a4f4cf41f37"), Email = "jonax@gmail.com", IsSportGymAdmin = true, IsSportGymCourtAdmin = true, IsTrainer = true, IsUser = true, Name = "Jonas", Password = "Jonas123", Surname = "Jonaitis" }
>>>>>>> 492f1c43443db62a6a4e0426e4945adfd0d19bbe
                    );
                });

            modelBuilder.Entity("SportsConnected.Entities.Court", b =>
                {
                    b.HasOne("SportsConnected.User", "CourtOwner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportsConnected.Entities.Gym", b =>
                {
                    b.HasOne("SportsConnected.User", "GymOwner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportsConnected.Entities.Membership", b =>
                {
                    b.HasOne("SportsConnected.Entities.Offer", "Offer")
                        .WithMany("Memberships")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportsConnected.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportsConnected.Entities.Offer", b =>
                {
                    b.HasOne("SportsConnected.Entities.Court", "Court")
                        .WithMany("Offers")
                        .HasForeignKey("CourtId");

                    b.HasOne("SportsConnected.Entities.Gym", "Gym")
                        .WithMany("Offers")
                        .HasForeignKey("GymId");
                });
#pragma warning restore 612, 618
        }
    }
}
