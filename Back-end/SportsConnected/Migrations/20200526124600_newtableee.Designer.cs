// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsConnected.Context;

namespace SportsConnected.Migrations
{
    [DbContext(typeof(SportsConnectedContext))]
    [Migration("20200526124600_newtableee")]
    partial class newtableee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsConnected.Entities.Court", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CourtType");

                    b.Property<string>("Description");

                    b.Property<string>("FullAdress");

                    b.Property<string>("ImageUrl");

                    b.Property<Guid>("OwnerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Courts");

                    b.HasData(
                        new { Id = new Guid("7b9a2827-2c2d-4e50-8fc1-0924ae14633d"), CourtType = "Basketball", Description = "Krepsinio aikstele su kokybiska danga ir james bluntu", FullAdress = "Kaunas 123g", ImageUrl = "www.gogle.lt", OwnerId = new Guid("36e53b00-1f14-4fee-a7ba-b05bbe0b73d2"), Title = "Naujausia krepsinio aikstele" }
                    );
                });

            modelBuilder.Entity("SportsConnected.Entities.Gym", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("FullAdress");

                    b.Property<string>("ImageUrl");

                    b.Property<Guid>("OwnerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Gyms");

                    b.HasData(
                        new { Id = new Guid("41eb580d-4fce-48e1-bb7e-03d4b83390d3"), Description = "Sportuot arba prasileisi", FullAdress = "Rajono gatve, Ketvirtas kampas", ImageUrl = "www.ateiniCia.lt", OwnerId = new Guid("36e53b00-1f14-4fee-a7ba-b05bbe0b73d2"), Title = "Rajonska sportan klub" }
                    );
                });

            modelBuilder.Entity("SportsConnected.Entities.Membership", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsPaid");

                    b.Property<Guid>("OfferId");

                    b.Property<DateTime>("StartDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("SportsConnected.Entities.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CourtId");

                    b.Property<string>("Description");

                    b.Property<Guid?>("GymId");

                    b.Property<string>("ImageUrl");

                    b.Property<double>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.HasIndex("GymId");

                    b.ToTable("Offers");

                    b.HasData(
                        new { Id = new Guid("3b093768-b459-484a-974e-d8ee8227eee2"), Description = "Toks geras gym, wow, ..as asd alkf alk", GymId = new Guid("41eb580d-4fce-48e1-bb7e-03d4b83390d3"), ImageUrl = "asda.lt", Price = 12.0, Title = "Pasiulymas" },
                        new { Id = new Guid("2868bc8a-f0ad-4df3-8682-d39e3414555a"), Description = "asdas dasasdasd asd asdas", GymId = new Guid("41eb580d-4fce-48e1-bb7e-03d4b83390d3"), ImageUrl = "asaada.lt", Price = 11.0, Title = "Pasiulymas antras" },
                        new { Id = new Guid("982abe0b-4a79-4294-83ea-4a7a03da5549"), CourtId = new Guid("7b9a2827-2c2d-4e50-8fc1-0924ae14633d"), Description = "courtas pirmassss as dasd asdas ", ImageUrl = "court.com", Price = 14.0, Title = "Pasiulymaasdas" },
                        new { Id = new Guid("98c1722a-6d3a-443e-9594-7609bbf22a20"), CourtId = new Guid("7b9a2827-2c2d-4e50-8fc1-0924ae14633d"), Description = "Cia courtas du", ImageUrl = "qewwq.lt", Price = 113.0, Title = "Pasiulymas court antras" }
                    );
                });

            modelBuilder.Entity("SportsConnected.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("IsSportGymAdmin");

                    b.Property<bool>("IsSportGymCourtAdmin");

                    b.Property<bool>("IsTrainer");

                    b.Property<bool>("IsUser");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("36e53b00-1f14-4fee-a7ba-b05bbe0b73d2"), Email = "jonax@gmail.com", IsSportGymAdmin = true, IsSportGymCourtAdmin = true, IsTrainer = true, IsUser = true, Name = "Jonas", Password = "Jonas123", PhoneNumber = "861234548", Surname = "Jonaitis" }
                    );
                });

            modelBuilder.Entity("SportsConnected.Entities.Court", b =>
                {
                    b.HasOne("SportsConnected.User", "CourtOwner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportsConnected.Entities.Gym", b =>
                {
                    b.HasOne("SportsConnected.User", "GymOwner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportsConnected.Entities.Membership", b =>
                {
                    b.HasOne("SportsConnected.Entities.Offer", "Offer")
                        .WithMany("Memberships")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportsConnected.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportsConnected.Entities.Offer", b =>
                {
                    b.HasOne("SportsConnected.Entities.Court", "Court")
                        .WithMany("Offers")
                        .HasForeignKey("CourtId");

                    b.HasOne("SportsConnected.Entities.Gym", "Gym")
                        .WithMany("Offers")
                        .HasForeignKey("GymId");
                });
#pragma warning restore 612, 618
        }
    }
}
